datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id               String         @id @default(cuid())
    email            String         @unique
    name             String?
    stripeCustomerId String?        @unique
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt
    subscription     Subscription?
    credits          CreditBalance?
    usageHistory     Usage[]
    apiKeys          ApiKey[]
}

model Subscription {
    id                   String    @id @default(cuid())
    userId               String    @unique
    user                 User      @relation(fields: [userId], references: [id])
    plan                 Plan      @default(FREE)
    status               Status    @default(ACTIVE)
    stripeSubscriptionId String?   @unique
    stripePriceId        String?
    startDate            DateTime  @default(now())
    endDate              DateTime?
    cancelAtPeriodEnd    Boolean   @default(false)
    createdAt            DateTime  @default(now())
    updatedAt            DateTime  @updatedAt

    @@index([userId])
}

model CreditBalance {
    id           String   @id @default(cuid())
    userId       String   @unique
    user         User     @relation(fields: [userId], references: [id])
    balance      Int      @default(1000) // Free tier starting credits
    lastRefillAt DateTime @default(now())
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    @@index([userId])
}

model Usage {
    id          String   @id @default(cuid())
    userId      String
    user        User     @relation(fields: [userId], references: [id])
    model       String // The AI model used
    creditsUsed Int
    prompt      String   @db.Text
    response    String   @db.Text
    createdAt   DateTime @default(now())

    @@index([userId])
}

model ApiKey {
    id         String    @id @default(cuid())
    userId     String
    user       User      @relation(fields: [userId], references: [id])
    key        String    @unique
    name       String?
    lastUsedAt DateTime?
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    isActive   Boolean   @default(true)

    @@index([userId])
}

enum Plan {
    FREE
    STARTER
}

enum Status {
    ACTIVE
    CANCELLED
    PAST_DUE
    EXPIRED
}
